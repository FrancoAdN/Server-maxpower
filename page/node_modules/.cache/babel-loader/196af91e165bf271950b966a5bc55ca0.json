{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\page\\\\src\\\\_useChat.js\";\nimport React, { createContext, useState, useRef, useEffect } from 'react';\nimport io from 'socket.io-client';\nexport const SockContext = createContext();\nexport default function ChatProv(props) {\n  const socket = useRef();\n  const [messages, setMessages] = useState([{\n    from: 0,\n    msg: 'Bienvenido al chat!'\n  }]);\n  useEffect(() => {\n    socket.current = io(\"http://localhost:5000\");\n    socket.current.emit('client');\n    socket.current.on(\"newChatMessage\", data => {\n      console.log(data);\n    });\n    return () => {\n      socket.current.disconnect();\n    };\n  }, []);\n\n  const sendMessage = data => {\n    setMessages(messages => [...messages, data]);\n    socket.current.emit(\"client_message\", data);\n  };\n\n  return /*#__PURE__*/React.createElement(SockContext.Provider, {\n    value: {\n      messages,\n      sendMessage\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, props.children);\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/page/src/_useChat.js"],"names":["React","createContext","useState","useRef","useEffect","io","SockContext","ChatProv","props","socket","messages","setMessages","from","msg","current","emit","on","data","console","log","disconnect","sendMessage","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,MAAzC,EAAiDC,SAAjD,QAAkE,OAAlE;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAO,MAAMC,WAAW,GAAGL,aAAa,EAAjC;AAIP,eAAe,SAASM,QAAT,CAAkBC,KAAlB,EAAyB;AAEpC,QAAMC,MAAM,GAAGN,MAAM,EAArB;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,CAAC;AAAEU,IAAAA,IAAI,EAAE,CAAR;AAAWC,IAAAA,GAAG,EAAE;AAAhB,GAAD,CAAD,CAAxC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,MAAM,CAACK,OAAP,GAAiBT,EAAE,CAAC,uBAAD,CAAnB;AAEAI,IAAAA,MAAM,CAACK,OAAP,CAAeC,IAAf,CAAoB,QAApB;AAEAN,IAAAA,MAAM,CAACK,OAAP,CAAeE,EAAf,CAAkB,gBAAlB,EAAqCC,IAAD,IAAU;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KAFD;AAIA,WAAO,MAAM;AACTR,MAAAA,MAAM,CAACK,OAAP,CAAeM,UAAf;AACH,KAFD;AAGH,GAZQ,EAYN,EAZM,CAAT;;AAeA,QAAMC,WAAW,GAAIJ,IAAD,IAAU;AAC1BN,IAAAA,WAAW,CAACD,QAAQ,IAAI,CAAC,GAAGA,QAAJ,EAAcO,IAAd,CAAb,CAAX;AACAR,IAAAA,MAAM,CAACK,OAAP,CAAeC,IAAf,CAAoB,gBAApB,EAAsCE,IAAtC;AACH,GAHD;;AAKA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEP,MAAAA,QAAF;AAAYW,MAAAA;AAAZ,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,KAAK,CAACc,QADX,CADJ;AAKH","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react'\r\nimport io from 'socket.io-client'\r\n\r\nexport const SockContext = createContext()\r\n\r\n\r\n\r\nexport default function ChatProv(props) {\r\n\r\n    const socket = useRef()\r\n    const [messages, setMessages] = useState([{ from: 0, msg: 'Bienvenido al chat!' }])\r\n\r\n    useEffect(() => {\r\n        socket.current = io(\"http://localhost:5000\")\r\n\r\n        socket.current.emit('client')\r\n\r\n        socket.current.on(\"newChatMessage\", (data) => {\r\n            console.log(data);\r\n        });\r\n\r\n        return () => {\r\n            socket.current.disconnect()\r\n        }\r\n    }, [])\r\n\r\n\r\n    const sendMessage = (data) => {\r\n        setMessages(messages => [...messages, data])\r\n        socket.current.emit(\"client_message\", data)\r\n    };\r\n\r\n    return (\r\n        <SockContext.Provider value={{ messages, sendMessage }}>\r\n            {props.children}\r\n        </SockContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}