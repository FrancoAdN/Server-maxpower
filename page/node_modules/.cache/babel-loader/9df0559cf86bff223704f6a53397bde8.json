{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Server-maxpower\\\\page\\\\src\\\\components\\\\isotepe\\\\TestIso.js\";\nimport React, { useState } from \"react\";\nimport IsoTopeGrid from \"react-isotope\";\nexport default function testiso() {\n  const filt = [{\n    \"label\": \"all\",\n    \"isChecked\": true\n  }, {\n    \"label\": \"test\",\n    \"isChecked\": false\n  }, {\n    \"label\": \"test1\",\n    \"isChecked\": false\n  }, {\n    \"label\": \"chart\",\n    \"isChecked\": false\n  }, {\n    \"label\": \"tile\",\n    \"isChecked\": false\n  }]; // Local state for managing filtering logic\n\n  const [filters, updateFilters] = useState(filt[0]); // Filter change handler\n\n  const onFilter = event => {\n    const {\n      target: {\n        value,\n        checked\n      }\n    } = event;\n    updateFilters(state => state.map(f => {\n      if (f.label === value) {\n        return { ...f,\n          isChecked: checked\n        };\n      }\n\n      return f;\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, filters.map(f => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter\",\n    key: `${f.label}_key`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: f.label,\n    type: \"checkbox\",\n    value: f.label,\n    onChange: onFilter,\n    checked: f.isChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: f.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, f.label)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IsoTopeGrid, {\n    gridLayout: cardsLayout // gridlayout of cards\n    ,\n    noOfCols: 3 // number of columns show in one row\n    ,\n    unitWidth: 200 // card width of 1 unit\n    ,\n    unitHeight: 100 // card height of 1 unit\n    ,\n    filters: filters // list of selected filters\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, cardsLayout.map(card => /*#__PURE__*/React.createElement(\"div\", {\n    key: card.id,\n    className: card.filter[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, card.id)))));\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/Server-maxpower/page/src/components/isotepe/TestIso.js"],"names":["React","useState","IsoTopeGrid","testiso","filt","filters","updateFilters","onFilter","event","target","value","checked","state","map","f","label","isChecked","cardsLayout","card","id","filter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAIA,eAAe,SAASC,OAAT,GAAmB;AAE9B,QAAMC,IAAI,GAAG,CACT;AACI,aAAS,KADb;AAEI,iBAAa;AAFjB,GADS,EAKT;AACI,aAAS,MADb;AAEI,iBAAa;AAFjB,GALS,EAST;AACI,aAAS,OADb;AAEI,iBAAa;AAFjB,GATS,EAaT;AACI,aAAS,OADb;AAEI,iBAAa;AAFjB,GAbS,EAiBT;AACI,aAAS,MADb;AAEI,iBAAa;AAFjB,GAjBS,CAAb,CAF8B,CAyB9B;;AACA,QAAM,CAACC,OAAD,EAAUC,aAAV,IAA2BL,QAAQ,CAACG,IAAI,CAAC,CAAD,CAAL,CAAzC,CA1B8B,CA4B9B;;AACA,QAAMG,QAAQ,GAAGC,KAAK,IAAI;AACtB,UAAM;AACFC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT;AADN,QAEFH,KAFJ;AAIAF,IAAAA,aAAa,CAACM,KAAK,IACfA,KAAK,CAACC,GAAN,CAAUC,CAAC,IAAI;AACX,UAAIA,CAAC,CAACC,KAAF,KAAYL,KAAhB,EAAuB;AACnB,eAAO,EACH,GAAGI,CADA;AAEHE,UAAAA,SAAS,EAAEL;AAFR,SAAP;AAIH;;AAED,aAAOG,CAAP;AACH,KATD,CADS,CAAb;AAYH,GAjBD;;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,OAAO,CAACQ,GAAR,CAAYC,CAAC,iBACV;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,GAAG,EAAG,GAAEA,CAAC,CAACC,KAAM,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,EAAE,EAAED,CAAC,CAACC,KADV;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,KAAK,EAAED,CAAC,CAACC,KAHb;AAII,IAAA,QAAQ,EAAER,QAJd;AAKI,IAAA,OAAO,EAAEO,CAAC,CAACE,SALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI;AAAO,IAAA,OAAO,EAAEF,CAAC,CAACC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BD,CAAC,CAACC,KAA5B,CARJ,CADH,CADL,CADJ,eAgBI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AACI,IAAA,UAAU,EAAEE,WADhB,CAC6B;AAD7B;AAEI,IAAA,QAAQ,EAAE,CAFd,CAEiB;AAFjB;AAGI,IAAA,SAAS,EAAE,GAHf,CAGoB;AAHpB;AAII,IAAA,UAAU,EAAE,GAJhB,CAIqB;AAJrB;AAKI,IAAA,OAAO,EAAEZ,OALb,CAKsB;AALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKY,WAAW,CAACJ,GAAZ,CAAgBK,IAAI,iBACjB;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAmB,IAAA,SAAS,EAAED,IAAI,CAACE,MAAL,CAAY,CAAZ,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,CAACC,EADV,CADH,CAPL,CADJ,CAhBJ,CADJ;AAkCH","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport IsoTopeGrid from \"react-isotope\";\r\n\r\n\r\n\r\nexport default function testiso() {\r\n\r\n    const filt = [\r\n        {\r\n            \"label\": \"all\",\r\n            \"isChecked\": true\r\n        },\r\n        {\r\n            \"label\": \"test\",\r\n            \"isChecked\": false\r\n        },\r\n        {\r\n            \"label\": \"test1\",\r\n            \"isChecked\": false\r\n        },\r\n        {\r\n            \"label\": \"chart\",\r\n            \"isChecked\": false\r\n        },\r\n        {\r\n            \"label\": \"tile\",\r\n            \"isChecked\": false\r\n        }\r\n    ]\r\n\r\n    // Local state for managing filtering logic\r\n    const [filters, updateFilters] = useState(filt[0]);\r\n\r\n    // Filter change handler\r\n    const onFilter = event => {\r\n        const {\r\n            target: { value, checked }\r\n        } = event;\r\n\r\n        updateFilters(state =>\r\n            state.map(f => {\r\n                if (f.label === value) {\r\n                    return {\r\n                        ...f,\r\n                        isChecked: checked\r\n                    };\r\n                }\r\n\r\n                return f;\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"filter-container\">\r\n                {filters.map(f => (\r\n                    <div className=\"filter\" key={`${f.label}_key`}>\r\n                        <input\r\n                            id={f.label}\r\n                            type=\"checkbox\"\r\n                            value={f.label}\r\n                            onChange={onFilter}\r\n                            checked={f.isChecked}\r\n                        />\r\n                        <label htmlFor={f.label}>{f.label}</label>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"container\">\r\n                <IsoTopeGrid\r\n                    gridLayout={cardsLayout} // gridlayout of cards\r\n                    noOfCols={3} // number of columns show in one row\r\n                    unitWidth={200} // card width of 1 unit\r\n                    unitHeight={100} // card height of 1 unit\r\n                    filters={filters} // list of selected filters\r\n                >\r\n                    {cardsLayout.map(card => (\r\n                        <div key={card.id} className={card.filter[0]}>\r\n                            {card.id}\r\n                        </div>\r\n                    ))}\r\n                </IsoTopeGrid>\r\n            </div>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}